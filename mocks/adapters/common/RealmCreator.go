// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/alexZaicev/realm-mgr/internal/domain/entities"
	mock "github.com/stretchr/testify/mock"

	realms "github.com/alexZaicev/realm-mgr/internal/usecases/realms"
)

// RealmCreator is an autogenerated mock type for the RealmCreator type
type RealmCreator struct {
	mock.Mock
}

// CreateRealm provides a mock function with given fields: ctx, repos, input
func (_m *RealmCreator) CreateRealm(ctx context.Context, repos realms.CreateRealmRepos, input realms.CreateRealmInput) (entities.Realm, error) {
	ret := _m.Called(ctx, repos, input)

	var r0 entities.Realm
	if rf, ok := ret.Get(0).(func(context.Context, realms.CreateRealmRepos, realms.CreateRealmInput) entities.Realm); ok {
		r0 = rf(ctx, repos, input)
	} else {
		r0 = ret.Get(0).(entities.Realm)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, realms.CreateRealmRepos, realms.CreateRealmInput) error); ok {
		r1 = rf(ctx, repos, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRealmCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewRealmCreator creates a new instance of RealmCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRealmCreator(t mockConstructorTestingTNewRealmCreator) *RealmCreator {
	mock := &RealmCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
