// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Carrier is an autogenerated mock type for the Carrier type
type Carrier struct {
	mock.Mock
}

// GetMultiple provides a mock function with given fields: key
func (_m *Carrier) GetMultiple(key string) []string {
	ret := _m.Called(key)

	var r0 []string
	if rf, ok := ret.Get(0).(func(string) []string); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// GetSingle provides a mock function with given fields: key
func (_m *Carrier) GetSingle(key string) (string, error) {
	ret := _m.Called(key)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Set provides a mock function with given fields: key, value
func (_m *Carrier) Set(key string, value string) {
	_m.Called(key, value)
}

type mockConstructorTestingTNewCarrier interface {
	mock.TestingT
	Cleanup(func())
}

// NewCarrier creates a new instance of Carrier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCarrier(t mockConstructorTestingTNewCarrier) *Carrier {
	mock := &Carrier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
