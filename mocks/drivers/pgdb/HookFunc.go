// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// HookFunc is an autogenerated mock type for the HookFunc type
type HookFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: query, args
func (_m *HookFunc) Execute(query string, args ...interface{}) func() {
	var _ca []interface{}
	_ca = append(_ca, query)
	_ca = append(_ca, args...)
	ret := _m.Called(_ca...)

	var r0 func()
	if rf, ok := ret.Get(0).(func(string, ...interface{}) func()); ok {
		r0 = rf(query, args...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func())
		}
	}

	return r0
}

type mockConstructorTestingTNewHookFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewHookFunc creates a new instance of HookFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHookFunc(t mockConstructorTestingTNewHookFunc) *HookFunc {
	mock := &HookFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
