// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	pgdb "github.com/alexZaicev/realm-mgr/internal/drivers/pgdb"
	mock "github.com/stretchr/testify/mock"
)

// DBOption is an autogenerated mock type for the DBOption type
type DBOption struct {
	mock.Mock
}

// apply provides a mock function with given fields: _a0
func (_m *DBOption) apply(_a0 *pgdb.DBOptions) {
	_m.Called(_a0)
}

type mockConstructorTestingTNewDBOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewDBOption creates a new instance of DBOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDBOption(t mockConstructorTestingTNewDBOption) *DBOption {
	mock := &DBOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
